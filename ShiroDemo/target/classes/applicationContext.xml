<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans       
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     
     http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
     http://www.springframework.org/schema/tx      
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd       
      http://www.springframework.org/schema/aop       
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd       
      http://www.springframework.org/schema/context       
      http://www.springframework.org/schema/context/spring-context-3.0.xsd">  
	<!-- 扫描文件(自动将service层注入) -->
	<context:component-scan
		base-package="com.yan.shiro.service" /> <!-- 1 -->
	<!-- 数据源定义 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
                <value>classpath:jdbc.properties</value>  
				<value>classpath:redis.properties</value>
            </list>  
        </property>  
    </bean>  

	<!--配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"> <!-- 3 -->
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${name}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
	</bean>

	<!--配置sqlSessionFactory 并将数据源注入 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--注入数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置configLocation属性,使mybatis-config.xml文件生效 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property> <!-- 4 -->
		<!--用于配置mapper映射xml -->
		<property name="mapperLocations" value="classpath:com/yan/shiro/mapper/*.xml" /> <!-- 5 -->
	</bean>
	<!-- 创建数据映射器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.yan.shiro.dao" />  <!-- 6 -->
	</bean>
	<!-- 对数据源进行事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<!-- 使用annotation定义数据库事务，这样可以在类或方法中直接使用@Transactional注解来声明事务 -->  
    <tx:annotation-driven transaction-manager="transactionManager" />  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
       <tx:attributes>  
           <tx:method name="save*" propagation="REQUIRED" />  
           <tx:method name="update*" propagation="REQUIRED" />  
           <tx:method name="delete*" propagation="REQUIRED" />  
           <tx:method name="load*" propagation="SUPPORTS" read-only="true" />  
           <tx:method name="find*" propagation="SUPPORTS" read-only="true" />  
           <tx:method name="search*" propagation="SUPPORTS" read-only="true" />  
           <tx:method name="approve" propagation="REQUIRED" />  
           <tx:method name="undo" propagation="REQUIRED" />  
           <tx:method name="*" propagation="SUPPORTS" read-only="true" />  
       </tx:attributes>  
   </tx:advice>  
	<!-- 引入shiro的配置文件 -->
	<import resource="classpath:applicationContext-shiro.xml" /> <!-- 7 -->
	 <!-- 引入redis属性配置文件 -->
    <import resource="classpath:spring-redis.xml"/>
</beans>